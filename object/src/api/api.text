API Documentation
-API : application programming interface
    라이브러리

-JAVA SE(Standard Edition) : 데스크탑 어플리케이션 개발
-     EE(Enterprise Edition) : 기업용 어플리케이션 개발 = > 웹 개발

-주요 클래스
1) 문자열 : String( + StringButter)
2) 날짜/시간 : Date(java.util), LocalDate, LocalTime, LocalDateTime
3) 키보드 입력 : Scanner
4) 수학 : Math
5) 컬렉션 프레임워크 : 자료 구조 개념이 적용된 클래스
    데이터를 저장하는 여러가지 다양한 방식의 클래스

                인터페이스 : method() abstract, 중괄호 없음, 추상메소드를 내림 
    <Collection 인터페이스>
        ^           ^
        |           |
        |           |
        |           |
List 인터페이스 Set 인터페이스  : 하위에도 공통적으로 쓰는 메소드 존재

Map 인터페이스

List : 순서가 있는 데이터의 집합 // like 배열, ArrayList 주로 사용
        중복 허용
        구현클래스 - ArrayList, LinkedList, Stack, Vector....
        1) ArrayList == 배열
        2) LinkedList
           배열 구조의 단점 : 크기 변경 불가
           - 크기 변경 불가 : 실행 속도의 향상을 위하여 큰 크기의 배열을 생성해야 함(메모리 낭비)
           - 비순차적인 데이터의 추가 또는 삭제에 시간이 많이 걸림
            - 차례대로 데이터를 추가하고 마지막에서부터 데이터를 삭제하는 것은 빠름
            - 배열의 중간에 데이터를 추가하기 위해 빈 자리를 만들고 다른 데이터를 복사해서 이동하는데 시간이 소요됨
        3) Stack 과 Queue
           - Stack : LIFO(List In First Out)
             -입구와 출구가 같음, 후입선출
             -예시) 브라우저 뒤로가기, Ctrl + Z
           - Queue : FIFO(First In First Out)
             -입구와 출구가 다름, 선입선출
             -예시) 프린터 인쇄중 파일

Set : 순서를 유지하지 않는 데이터 집합 // 서로 다른 데이터
        데이터 중복 허용하지 않음
        구현 클래스 - HashSet, TreeSet..
        (Set-부모 클래스 HashSet-자식클래스)(Treeset - 트리구조, 구조화 되어 있어서 검색용이)

Map : 키와 값의 쌍으로 이루어진 데이터 집합
        순서는 유지하지 않음
        키는 중복불가, 값을 중복 허용 // name 과 여러 이름, age와 여러 나이
        구현 클래스 - Hashmap, TreeMap...
        파이썬에서 많이 씀
        List, Set과 달리 향상된 for문으로 불러올 수 없음. 단순 반복으로

: 셋 중에 어디 담을지 결정

Arrays : 배열을 다루는데 유용한 메소드 정의되어 있음.
- Arrays.toString()
- sort(), binarySearch()

Iterator : 컬렉션에 저장된 요소 접근 시 사용
           컬렉션에 저장된 요소들을 읽어오는 방법 표준화, 읽기만
           List Set Map 불러오는 방법 통일해보자 => Iterator
           구 버전으로 Enumeration 있음
           hasNext() / next() / remove()