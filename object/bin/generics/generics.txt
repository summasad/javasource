- 지네릭스(JDK 1.5 버전 도입)
목적
1. 타입 안정성 제공
2. 타입 체크와 형변환 생략 가능을 통해 코드의 간결성 유지
3. 하위 클래스에서 여러 타입 가져오고 확인해야함 - 정확한 타입 가져올 필요

기호
- T : type variable //사용 처음에 타입 선언, 고정
- E : element
- K : key
- V : value

Box2<T> : 지네릭 클래스
- T Box라고 읽음
- T : 타입 변수
- Box2 : 원시 타입(raw type)

- 제한된 지네릭 클래스
- < T extends Fruit > : Fruit 클래스의 자손만 타입으로 사용 가능

-와일드 카드
1) <? extends T> : T와 그 자손들만 가능
2) <? super T> : T와 그 조상들만 가능
3) <?> : 제한 없음(모든 타입 가능)

ex) Collections.sort()
static <T extends Comparable<? super T>> sort(List<T> list)
- <T extends Comparable<T>> sort(List<T> list) //와일드 카드 없을 때
  : T (Member) => T가 Comparable를 extends 한 클래스여야 한다.
  : class Member extends Comparable{}

- <T extends Comparable<? super T>> sort(List<T> list)
  : T가 Member 고, Person의 자손이라면
  : Member, Person, Object 타입이 가능하다.